{"ast":null,"code":"// // Import the functions you need from the SDKs you need\n// import { initializeApp } from \"firebase/app\";\n// import { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\"; //추가\n\n// // Your web app's Firebase configuration\n// const firebaseConfig = {\n//   apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n//   authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n//   projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n//   storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n//   messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n//   appId: process.env.REACT_APP_FIREBASE_APP_ID,\n//   measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n// };\n\n// // Initialize Firebase\n// const app = initializeApp(firebaseConfig);\n// const auth = getAuth(app); //변경\n\n// //추가\n// export const signInWithGoogle = () => {\n//     const provider = new GoogleAuthProvider();\n//     signInWithPopup(auth, provider)\n//     .then((result) => {\n//       // Handle the sign-in result\n//       console.log(result);\n//     })\n//     .catch((error) => {\n//       // Handle errors here\n//       console.error(error);\n//     });\n// };\n\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\"; //추가\nimport { useContext } from 'react';\nimport { UserContext } from './UserContext'; // UserContext 경로를 정확히 설정하세요\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app); //변경\n\n//추가\nexport const signInWithGoogle = () => {\n  const provider = new GoogleAuthProvider();\n  return signInWithPopup(auth, provider);\n  // const { setUser } = useContext(UserContext); // Use the context\n  // const provider = new GoogleAuthProvider();\n  // signInWithPopup(auth, provider)\n  // .then((result) => {\n  //   // Handle the sign-in result\n  //   console.log(result);\n  //   setUser(result.user); // Save user data to context\n  // })\n  // .catch((error) => {\n  //   // Handle errors here\n  //   console.error(error);\n  // });\n};","map":{"version":3,"names":["initializeApp","getAuth","GoogleAuthProvider","signInWithPopup","useContext","UserContext","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","measurementId","REACT_APP_FIREBASE_MEASUREMENT_ID","app","auth","signInWithGoogle","provider"],"sources":["/Users/yuna/Desktop/lastProject/last/src/fbase.js"],"sourcesContent":["// // Import the functions you need from the SDKs you need\n// import { initializeApp } from \"firebase/app\";\n// import { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\"; //추가\n\n// // Your web app's Firebase configuration\n// const firebaseConfig = {\n//   apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n//   authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n//   projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n//   storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n//   messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n//   appId: process.env.REACT_APP_FIREBASE_APP_ID,\n//   measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n// };\n\n// // Initialize Firebase\n// const app = initializeApp(firebaseConfig);\n// const auth = getAuth(app); //변경\n\n// //추가\n// export const signInWithGoogle = () => {\n//     const provider = new GoogleAuthProvider();\n//     signInWithPopup(auth, provider)\n//     .then((result) => {\n//       // Handle the sign-in result\n//       console.log(result);\n//     })\n//     .catch((error) => {\n//       // Handle errors here\n//       console.error(error);\n//     });\n// };\n\n\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\"; //추가\nimport { useContext } from 'react';\nimport { UserContext } from './UserContext'; // UserContext 경로를 정확히 설정하세요\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app); //변경\n\n//추가\nexport const signInWithGoogle = () => {\n  const provider = new GoogleAuthProvider();\n  return signInWithPopup(auth, provider);\n    // const { setUser } = useContext(UserContext); // Use the context\n    // const provider = new GoogleAuthProvider();\n    // signInWithPopup(auth, provider)\n    // .then((result) => {\n    //   // Handle the sign-in result\n    //   console.log(result);\n    //   setUser(result.user); // Save user data to context\n    // })\n    // .catch((error) => {\n    //   // Handle errors here\n    //   console.error(error);\n    // });\n};\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,kBAAkB,EAAEC,eAAe,QAAQ,eAAe,CAAC,CAAC;AAC9E,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,eAAe,CAAC,CAAC;;AAE7C;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,0BAA0B;EAC9CC,UAAU,EAAEH,OAAO,CAACC,GAAG,CAACG,8BAA8B;EACtDC,SAAS,EAAEL,OAAO,CAACC,GAAG,CAACK,6BAA6B;EACpDC,aAAa,EAAEP,OAAO,CAACC,GAAG,CAACO,iCAAiC;EAC5DC,iBAAiB,EAAET,OAAO,CAACC,GAAG,CAACS,sCAAsC;EACrEC,KAAK,EAAEX,OAAO,CAACC,GAAG,CAACW,yBAAyB;EAC5CC,aAAa,EAAEb,OAAO,CAACC,GAAG,CAACa;AAC7B,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGvB,aAAa,CAACM,cAAc,CAAC;AACzC,MAAMkB,IAAI,GAAGvB,OAAO,CAACsB,GAAG,CAAC,CAAC,CAAC;;AAE3B;AACA,OAAO,MAAME,gBAAgB,GAAGA,CAAA,KAAM;EACpC,MAAMC,QAAQ,GAAG,IAAIxB,kBAAkB,CAAC,CAAC;EACzC,OAAOC,eAAe,CAACqB,IAAI,EAAEE,QAAQ,CAAC;EACpC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}