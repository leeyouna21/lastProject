{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/yuna/Desktop/lastProject/last/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2;import React,{useState,useEffect}from'react';import styled from'styled-components';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Weather=()=>{const API_KEY=\"68a58b70236437cfe190633d8916c799\";const[location,setLocation]=useState('');const[result,setResult]=useState({});const[error,setError]=useState(null);useEffect(()=>{if(\"geolocation\"in navigator){navigator.geolocation.getCurrentPosition(async position=>{const latitude=position.coords.latitude;const longitude=position.coords.longitude;try{const response=await axios.get(\"https://api.openweathermap.org/data/2.5/weather?lat=\".concat(latitude,\"&lon=\").concat(longitude,\"&appid=\").concat(API_KEY));setResult(response.data);}catch(error){setError(error.message);}},error=>{setError('사용자의 위치를 가져올 수 없습니다.');});}else{setError('브라우저가 Geolocation API를 지원하지 않습니다.');}},[API_KEY]);const searchWeather=async e=>{if(e.key==='Enter'){try{const response=await axios.get(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(location,\"&appid=\").concat(API_KEY));setResult(response.data);}catch(err){setError(err.message);}}};return/*#__PURE__*/_jsx(AppWrap,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"appContentWrap\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\uB3C4\\uC2DC\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",value:location,onChange:e=>setLocation(e.target.value),onKeyDown:searchWeather}),error&&/*#__PURE__*/_jsxs(\"div\",{children:[\"Error: \",error]}),Object.keys(result).length!==0&&/*#__PURE__*/_jsxs(ResultWrap,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"city\",children:result.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"temporature\",children:[Math.round((result.main.temp-273.15)*10)/10,\"\\xB0C\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"sky\",children:result.weather[0].main})]})]})});};export default Weather;const AppWrap=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    .appContentWrap {\\n        height: 260px;\\n    }\\n    input {\\n        width: 300px;\\n        height: 60px;\\n        border: 1px solid #e4e4e4;\\n        border-radius: 10px;\\n        margin-left: 100px;\\n        margin-top: 20px;\\n        margin-bottom: 20px;\\n    }\\n\"])));const ResultWrap=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    .city {\\n        font-size: 24px;\\n        text-align: center;\\n    }\\n    .temporature {\\n        font-size: 60px;\\n        margin-top: 8px;\\n        text-align: center;\\n    }\\n    .sky {\\n        font-size: 20px;\\n        margin-top: 8px;\\n        text-align: center;\\n        margin-bottom: 20px;\\n    }\\n\"])));","map":{"version":3,"names":["React","useState","useEffect","styled","axios","jsx","_jsx","jsxs","_jsxs","Weather","API_KEY","location","setLocation","result","setResult","error","setError","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","response","get","concat","data","message","searchWeather","e","key","err","AppWrap","children","className","type","placeholder","value","onChange","target","onKeyDown","Object","keys","length","ResultWrap","name","Math","round","main","temp","weather","div","_templateObject","_taggedTemplateLiteral","_templateObject2"],"sources":["/Users/yuna/Desktop/lastProject/last/src/components/MainPG/Weather.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nconst Weather = () => {\n    const API_KEY = \"68a58b70236437cfe190633d8916c799\";\n    const [location, setLocation] = useState('');\n    const [result, setResult] = useState({});\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        if (\"geolocation\" in navigator) {\n            navigator.geolocation.getCurrentPosition(\n                async position => {\n                    const latitude = position.coords.latitude;\n                    const longitude = position.coords.longitude;\n                    try {\n                        const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}`);\n                        setResult(response.data);\n                    } catch (error) {\n                        setError(error.message);\n                    }\n                },\n                error => {\n                    setError('사용자의 위치를 가져올 수 없습니다.');\n                }\n            );\n        } else {\n            setError('브라우저가 Geolocation API를 지원하지 않습니다.');\n        }\n    }, [API_KEY]);\n\n    const searchWeather = async (e) => {\n        if (e.key === 'Enter') {\n            try {\n                const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${API_KEY}`);\n                setResult(response.data);\n            } catch (err) {\n                setError(err.message);\n            }\n        }\n    }\n\n    return (\n        <AppWrap>\n            <div className=\"appContentWrap\">\n                <input\n                    type=\"text\"\n                    placeholder='도시를 입력하세요'\n                    value={location}\n                    onChange={(e) => setLocation(e.target.value)}\n                    onKeyDown={searchWeather}\n                />\n                {error && <div>Error: {error}</div>}\n                {\n                    Object.keys(result).length !== 0 && (\n                        <ResultWrap>\n                            <div className=\"city\">{result.name}</div>\n                            <div className=\"temporature\">\n                                {Math.round(((result.main.temp - 273.15) * 10)) / 10}°C\n                            </div>\n                            <div className=\"sky\">{result.weather[0].main}</div>\n                        </ResultWrap>\n                    )\n                }\n            </div>\n        </AppWrap>\n    );\n}\n\nexport default Weather;\n\nconst AppWrap = styled.div`\n    .appContentWrap {\n        height: 260px;\n    }\n    input {\n        width: 300px;\n        height: 60px;\n        border: 1px solid #e4e4e4;\n        border-radius: 10px;\n        margin-left: 100px;\n        margin-top: 20px;\n        margin-bottom: 20px;\n    }\n`;\n\nconst ResultWrap = styled.div`\n    .city {\n        font-size: 24px;\n        text-align: center;\n    }\n    .temporature {\n        font-size: 60px;\n        margin-top: 8px;\n        text-align: center;\n    }\n    .sky {\n        font-size: 20px;\n        margin-top: 8px;\n        text-align: center;\n        margin-bottom: 20px;\n    }\n`;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}