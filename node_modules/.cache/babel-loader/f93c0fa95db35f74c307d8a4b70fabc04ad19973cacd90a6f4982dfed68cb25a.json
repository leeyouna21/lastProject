{"ast":null,"code":"// // Import the functions you need from the SDKs you need\n// import { initializeApp } from \"firebase/app\";\n// import { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\"; //추가\n// // Your web app's Firebase configuration\n// const firebaseConfig = {\n//   apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n//   authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n//   projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n//   storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n//   messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n//   appId: process.env.REACT_APP_FIREBASE_APP_ID,\n//   measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n// };\n// // Initialize Firebase\n// const app = initializeApp(firebaseConfig);\n// const auth = getAuth(app); //변경\n// //추가\n// export const signInWithGoogle = () => {\n//     const provider = new GoogleAuthProvider();\n//     signInWithPopup(auth, provider)\n//     .then((result) => {\n//       // Handle the sign-in result\n//       console.log(result);\n//     })\n//     .catch((error) => {\n//       // Handle errors here\n//       console.error(error);\n//     });\n// };\n// Import the functions you need from the SDKs you need\nimport{initializeApp}from\"firebase/app\";import{getAuth,GoogleAuthProvider,signInWithPopup}from\"firebase/auth\";//추가\nimport{useContext}from'react';import{UserContext}from'./UserContext';// UserContext 경로를 정확히 설정하세요\n// Your web app's Firebase configuration\nconst firebaseConfig={apiKey:process.env.REACT_APP_FIREBASE_API_KEY,authDomain:process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,projectId:process.env.REACT_APP_FIREBASE_PROJECT_ID,storageBucket:process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,messagingSenderId:process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,appId:process.env.REACT_APP_FIREBASE_APP_ID,measurementId:process.env.REACT_APP_FIREBASE_MEASUREMENT_ID};// Initialize Firebase\nconst app=initializeApp(firebaseConfig);const auth=getAuth(app);//변경\n//추가\nexport const signInWithGoogle=()=>{const provider=new GoogleAuthProvider();return signInWithPopup(auth,provider);// const { setUser } = useContext(UserContext); // Use the context\n// const provider = new GoogleAuthProvider();\n// signInWithPopup(auth, provider)\n// .then((result) => {\n//   // Handle the sign-in result\n//   console.log(result);\n//   setUser(result.user); // Save user data to context\n// })\n// .catch((error) => {\n//   // Handle errors here\n//   console.error(error);\n// });\n};","map":{"version":3,"names":["initializeApp","getAuth","GoogleAuthProvider","signInWithPopup","useContext","UserContext","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","measurementId","REACT_APP_FIREBASE_MEASUREMENT_ID","app","auth","signInWithGoogle","provider"],"sources":["/Users/yuna/Desktop/lastProject/last/src/fbase.js"],"sourcesContent":["// // Import the functions you need from the SDKs you need\n// import { initializeApp } from \"firebase/app\";\n// import { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\"; //추가\n\n// // Your web app's Firebase configuration\n// const firebaseConfig = {\n//   apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n//   authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n//   projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n//   storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n//   messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n//   appId: process.env.REACT_APP_FIREBASE_APP_ID,\n//   measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n// };\n\n// // Initialize Firebase\n// const app = initializeApp(firebaseConfig);\n// const auth = getAuth(app); //변경\n\n// //추가\n// export const signInWithGoogle = () => {\n//     const provider = new GoogleAuthProvider();\n//     signInWithPopup(auth, provider)\n//     .then((result) => {\n//       // Handle the sign-in result\n//       console.log(result);\n//     })\n//     .catch((error) => {\n//       // Handle errors here\n//       console.error(error);\n//     });\n// };\n\n\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\"; //추가\nimport { useContext } from 'react';\nimport { UserContext } from './UserContext'; // UserContext 경로를 정확히 설정하세요\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app); //변경\n\n//추가\nexport const signInWithGoogle = () => {\n  const provider = new GoogleAuthProvider();\n  return signInWithPopup(auth, provider);\n    // const { setUser } = useContext(UserContext); // Use the context\n    // const provider = new GoogleAuthProvider();\n    // signInWithPopup(auth, provider)\n    // .then((result) => {\n    //   // Handle the sign-in result\n    //   console.log(result);\n    //   setUser(result.user); // Save user data to context\n    // })\n    // .catch((error) => {\n    //   // Handle errors here\n    //   console.error(error);\n    // });\n};\n"],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA,OAASA,aAAa,KAAQ,cAAc,CAC5C,OAASC,OAAO,CAAEC,kBAAkB,CAAEC,eAAe,KAAQ,eAAe,CAAE;AAC9E,OAASC,UAAU,KAAQ,OAAO,CAClC,OAASC,WAAW,KAAQ,eAAe,CAAE;AAE7C;AACA,KAAM,CAAAC,cAAc,CAAG,CACrBC,MAAM,CAAEC,OAAO,CAACC,GAAG,CAACC,0BAA0B,CAC9CC,UAAU,CAAEH,OAAO,CAACC,GAAG,CAACG,8BAA8B,CACtDC,SAAS,CAAEL,OAAO,CAACC,GAAG,CAACK,6BAA6B,CACpDC,aAAa,CAAEP,OAAO,CAACC,GAAG,CAACO,iCAAiC,CAC5DC,iBAAiB,CAAET,OAAO,CAACC,GAAG,CAACS,sCAAsC,CACrEC,KAAK,CAAEX,OAAO,CAACC,GAAG,CAACW,yBAAyB,CAC5CC,aAAa,CAAEb,OAAO,CAACC,GAAG,CAACa,iCAC7B,CAAC,CAED;AACA,KAAM,CAAAC,GAAG,CAAGvB,aAAa,CAACM,cAAc,CAAC,CACzC,KAAM,CAAAkB,IAAI,CAAGvB,OAAO,CAACsB,GAAG,CAAC,CAAE;AAE3B;AACA,MAAO,MAAM,CAAAE,gBAAgB,CAAGA,CAAA,GAAM,CACpC,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAxB,kBAAkB,CAAC,CAAC,CACzC,MAAO,CAAAC,eAAe,CAACqB,IAAI,CAAEE,QAAQ,CAAC,CACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}